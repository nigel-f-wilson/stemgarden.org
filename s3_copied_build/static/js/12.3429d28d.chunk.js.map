{"version":3,"sources":["pages/resources/math-games/_helpers/probability.js","pages/resources/math-games/_helpers/low-level.js","pages/resources/math-games/connect-four/winningLineMaps.js","pages/resources/math-games/connect-four/moveListHelpers.js","pages/resources/math-games/connect-four/questionGenerators/combiningGenerator.js","pages/resources/math-games/connect-four/questionGenerators/multiplyingGenerator.js","pages/resources/math-games/connect-four/questionGenerators/questionGenerator.js","pages/resources/math-games/connect-four/ConnectFourContext.js","pages/resources/math-games/connect-four/components/MaxSquareArea.js","pages/resources/math-games/connect-four/modals/WelcomeModal.js","pages/resources/math-games/connect-four/modals/SettingsModal.js","pages/resources/math-games/connect-four/modals/MathQuestionModal.js","pages/resources/math-games/connect-four/components/Chip.js","pages/resources/math-games/connect-four/components/ColumnOfSquaresWithHoles.js","pages/resources/math-games/connect-four/components/Column.js","pages/resources/math-games/connect-four/components/InfoHeaderRow.js","pages/resources/math-games/connect-four/components/RoundedBorder.js","pages/resources/math-games/connect-four/components/GameBoard.js","../node_modules/@mui/icons-material/esm/Undo.js","pages/resources/math-games/connect-four/components/NewGameAndUndoButtons.js","pages/resources/math-games/_helpers/commentary.js","pages/resources/math-games/connect-four/ConnectFourController.js","pages/resources/math-games/connect-four/ConnectFourRoot.js"],"names":["intersect","listOne","listTwo","filter","item","includes","randomInt","min","max","Math","ceil","floor","random","chooseRandomFromArray","array","length","cellsInLine","currentLineId","cell","cellsPerCol","isStartOfVerticalLine","line","verticalLineByStartCell","isStartOfHorizontalLine","horizontalLineByStartCell","cellId","upslashLineByStartCell","isStartOfDownslashLine","downslashLineByStartCell","console","log","getCellsInLinesArray","numberOfLines","linesThatContainCell","Array","fill","lineId","forEach","concat","getCellsContainingLinesArray","getRowByCellId","isEndOfVerticalLine","id","getLowestUnclaimedCells","moveList","lowestUnclaimedCells","move","getGameStatus","nonSkippedTurns","lastPlayerToMove","lastPlayersMoves","turn","lastMoveMade","slice","linesAffectedByLastMove","i","cells","boardIsFull","getBotMove","wins","botsMoves","playerTwosMoves","getWinningMovesForBot","blocks","threats","humansMoves","playerOnesMoves","getDefensiveMovesForBot","legalMoves","getLegalMoves","winningMoves","blockingMoves","missingMinuendInstructions","missingSumInstructions","missingDifferenceInstructions","missingAddendInstructions","howFarApartInstructions","missingSumTwo","difficulty","vars","a","b","c","type","correctAnswer","equationString","instructions","inputType","missingSumThree","d","missingDifference","missingAddendTwo","missingAddendThree","howFarApart","abs","doubleTripleQuadruple","dtqInstructions","missingMinuend","mediumFactor","missingProductInstructions","missingFactorInstructions","missingDivisorInstructions","missingQuotientInstructions","missingProductTwo","missingProductThree","missingFactorTwo","missingFactorThree","missingDivisor","missingQuotient","halfThirdQuarter","generatorFuntions","Map","assert","ConnectFourContext","createContext","ConnectFourContextProvider","props","gameBoardConstants","oneSixth","oneSeventh","sixSevenths","chipSizeRelativeToSquare","rowNumbers","columnNumbers","columnLetters","boardSideLength","useContext","AppContext","maxSquareSideLength","buttonContainerHeight","zIndex","chip","board","useState","opponent","topics","difficultyMode","settings","setSettings","setMoveList","gameStatus","setGameStatus","boardData","setBoardData","nextPlayer","setNextPlayer","gameIsOver","setGameIsOver","setLowestUnclaimedCells","setPlayerOnesMoves","setPlayerTwosMoves","openModal","setOpenModal","activeCell","setActiveCell","testQuestion","question","setQuestion","headerText","setHeaderText","isBotsTurn","setIsBotsTurn","useEffect","updatedGameStatus","data","player","getBoardData","connectFourContext","Provider","value","children","MaxSquareArea","Box","display","flexDirection","alignItems","height","width","position","Transition","React","forwardRef","ref","Zoom","WelcomeModal","open","openSettingsModal","Dialog","TransitionComponent","fullWidth","maxWidth","PaperProps","sx","minHeight","minWidth","p","borderRadius","overflowY","Typography","variant","align","PlayNowButton","gutterBottom","href","color","m","justifyContent","Button","onClick","SettingsModal","startNewGame","cancelNewGame","noneSelectedError","maxHeight","OpponentSelector","TopicSelector","DifficultyModeSelector","StartAndCancelButtons","OpponentIconButton","icon","selected","IconButton","size","prev","selectOpponent","flex","faUserFriends","faRobot","TopicButton","topic","label","updatedTopicsArray","toggleTopic","InvalidSelectionHelperText","DifficultyModeButton","mode","pb","borderTop","borderColor","CancelButton","StartGameButton","disabled","mt","ZoomTransition","MathQuestionModal","handleAnswerSubmit","navbarHeightPx","disableEscapeKeyDown","onBackdropClick","border","margin","marginTop","HeaderText","QuestionEquation","AnswerInputComponent","flexFlow","fontStyle","overflow","playersAnswer","setPlayersAnswer","answerIsNum","test","error","handlePlayersAnswerChange","event","updatedAnswer","target","trim","NumericalTextInput","handleSubmitButtonClick","CompareButtons","padding","FormControl","InputLabel","OutlinedInput","autoFocus","autoComplete","pattern","onChange","inputProps","style","fontSize","onKeyDown","key","SubmitButton","ml","px","lineHeight","Chip","containerRef","bgcolor","Slide","in","timeout","direction","container","current","ColumnOfSquaresWithHoles","top","map","num","boxShadow","Column","index","handleColumnClick","columnLetter","backgroundColor","HoverChip","ChipContainer","useRef","cellsInColumn","row","InfoHeaderRow","message","left","transitionDelay","RoundedBorder","boxSizing","GameBoard","columnIndex","createSvgIcon","_jsx","NewGameAndUndoButtons","undoMove","NewGameButton","UndoMoveButton","startIcon","faArrowRotateLeft","mx","Undo","waysToSayCorrect","ConnectFourController","availableHeight","answerIsCorrect","Number","answerFeedback","moveToAdd","updatedMoveList","setTimeout","botMove","moveListAfterBot","score","getScore","determineDifficulty","Promise","resolve","reject","get","generateQuestion","then","newQuestion","openMathQuestionModal","ConnectFourRoot"],"mappings":"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","file":"static/js/12.3429d28d.chunk.js","sourcesContent":["\nexport function intersect(listOne, listTwo) {\n  return listOne.filter(item => listTwo.includes(item))\n}\n\n\n// function factorial(num) {\n//     console.assert(num >= 0 && num <=9, `Factorial called with a number out of this game's range!`)\n//     let product = 1\n//     for (let i = 1; i <= num; i++) {\n//         product = product * i\n//     }\n//     return product\n//     // This led to a fun research rabbit hole about how to more efficiently compute factorials using Paschals Triangle\n// }\n\n\n// For most heavily used generic math functions like intersect, union, factorial, mean, randomInt, randomFromArray, choose, ppermutations, combinations.","// module.exports = { randomInt, chooseRandomFromArray, weightedChooseFromArray }\n\nexport function randomInt(min, max) { //The minimum is inclusive and the maximum is exclusive.\n  min = Math.ceil(min)\n  max = Math.floor(max)\n  return Math.floor(Math.random() * (max - min) + min)\n} \n\nexport function chooseRandomFromArray(array) {\n  let randomIndex = randomInt(0, array.length)\n  let choice = array[randomIndex]\n  // console.log(`CHOICE: ${choice}`);\n  return choice\n}\n\nexport function weightedChooseFromArray(arrayToChooseFrom, weights) {\n  console.assert(arrayToChooseFrom.length === weights.length, 'weightedChooseFromArray recieved invalid params')\n  let randomIndex = randomInt(0, arrayToChooseFrom.length)\n  let choice = arrayToChooseFrom[randomIndex]\n  // console.log(`CHOICE: ${choice}`);\n  return choice\n}","// A \"line\" is a set of four cellIds that together form a win.\n// There are four 'types' of Line: 'vertical', 'horizontal', 'upslash', 'downslash'\n// There are 69 lines and 42 cells. \n// This module exports two high-level constants that map these two types of id to one another.\n// 1) lineIdToCellIdsMap  could be renamed \"cellsInLine\". It takes a lineId 0-63 and gives back the four cells in it.\n// 2) cellIdToLineIdsMap  could be renamed \"linesThatIncludeCell\". It takes a cellId 0-41 and gives back the 3 to 13 lines that cell is part of.\n\n// Low-level Constants\nconst cellsPerCol = 6;\nconst cellsPerRow = 7;\nconst totalCells = cellsPerCol * cellsPerRow;\n\nexport const cellsInLine = getCellsInLinesArray()\n\nfunction getCellsInLinesArray() {\n  let array = []\n  let currentLineId = 0\n  // To go effectively through each line we will actually go through each cell and in the process of doing so go through \n  // each of the four types of line it could be the 'starting' cell of.  \n  for (let cell = 0; cell < totalCells; cell++) {\n    if (isStartOfVerticalLine(cell)) {\n      let line = verticalLineByStartCell(cell)\n      array[currentLineId++] = line\n    }\n    if (isStartOfHorizontalLine(cell)) {\n      let line = horizontalLineByStartCell(cell)\n      array[currentLineId++] = line\n    }\n    if (isStartOfUpslashLine(cell)) {\n      let line = upslashLineByStartCell(cell)\n      array[currentLineId++] = line\n    }\n    if (isStartOfDownslashLine(cell)) {\n      let line = downslashLineByStartCell(cell)\n      array[currentLineId++] = line\n    }\n  }\n  console.log(`Mapped each of the ${array.length} LineIds to the set of Cells in it --> `)\n  // console.log(array);\n  return array\n}\n\nexport const numberOfLines = cellsInLine.length\n\nexport const linesThatContainCell = getCellsContainingLinesArray()\n\nfunction getCellsContainingLinesArray() {\n  let array = new Array(totalCells).fill([])\n  for (let lineId = 0; lineId < numberOfLines; lineId++) {\n    let cells = cellsInLine[lineId]\n    // console.log(`Looking at line ${lineId} found cells in line to be: [${cells}]`);\n    cells.forEach(cell => {\n      array[cell] = array[cell].concat(lineId)\n    })\n  }\n  console.log(`Mapped each of the ${totalCells} CellIds to the set of all Lines that include it.`)\n  // console.log(array)\n  return array\n}\n\nfunction verticalLineByStartCell(cellId) {\n    let line = [\n        cellId + (0 * cellsPerRow),\n        cellId + (1 * cellsPerRow),\n        cellId + (2 * cellsPerRow),\n        cellId + (3 * cellsPerRow)\n    ]\n    return line\n}\nfunction horizontalLineByStartCell(cellId) {\n    let line = [\n        cellId + 0,\n        cellId + 1,\n        cellId + 2,\n        cellId + 3\n    ]\n    return line\n}\nfunction upslashLineByStartCell(cellId) {\n    let line = [\n        cellId + (0 * cellsPerRow) + 0,\n        cellId + (1 * cellsPerRow) + 1,\n        cellId + (2 * cellsPerRow) + 2,\n        cellId + (3 * cellsPerRow) + 3\n    ]\n    return line\n}\nfunction downslashLineByStartCell(cellId) {\n    let line = [\n        cellId - (0 * cellsPerRow) + 0,\n        cellId - (1 * cellsPerRow) + 1,\n        cellId - (2 * cellsPerRow) + 2,\n        cellId - (3 * cellsPerRow) + 3\n    ]\n    return line\n}\n\n\nfunction isStartOfVerticalLine(cellId) {\n    const rowNumber = getRowByCellId(cellId)\n    return (cellsPerCol - rowNumber >= 4)\n}\nfunction isEndOfVerticalLine(cellId) {\n    const rowNumber = getRowByCellId(cellId)\n    return (rowNumber >= 3)\n}\nfunction isStartOfHorizontalLine(cellId) {\n    // If we are in the 0-th row then the minimum cellsPerCol that should return true is 4\n    const colNumber = getColByCellId(cellId)\n    return (cellsPerRow - colNumber >= 4)\n}\nfunction isStartOfUpslashLine(cellId) {\n    // A cell is the Start Of an Upslash Line IFF it is BOTH the \"start\" of a vertical line AND the \"start\" of a horizontal line.  \n    return (isStartOfVerticalLine(cellId) && isStartOfHorizontalLine(cellId));\n}\nfunction isStartOfDownslashLine(cellId) {\n    // A cell is the Start Of an Downslash Line IFF it is BOTH the \"end\" of a vertical line AND the \"start\" of a horizontal line.  \n    return (isEndOfVerticalLine(cellId) && isStartOfHorizontalLine(cellId));\n}\n\n// LOWEST LEVEL CELL-ROW-COL HELPERS\nfunction getRowByCellId(id) {\n    return (Math.floor(id / cellsPerRow))\n}\nfunction getColByCellId(id) {\n    return (id % cellsPerRow)\n}\n// function getCellIdByRowCol(row, col) {\n//     return (row * cellsPerRow + col);\n// }\n\n","// This file contains helpers that only take the moveList and derive more\n// helpful representations of that data like gameStatus and boardData\nimport { intersect } from \"../_helpers/probability\";\nimport { chooseRandomFromArray } from '../_helpers/low-level';\nimport { cellsInLine, linesThatContainCell, numberOfLines } from \"./winningLineMaps\";\n\n// import { playerOnesMoves, playerTwosMoves, cellIsUnclaimed, lowestUnclaimedCellInColumn } from './ConnectFourContext';\n\nexport function getLowestUnclaimedCells(moveList) {\n  // let lowestUnclaimedCells = gameBoardConstants.columnNumbers\n  let lowestUnclaimedCells = [0, 1, 2, 3, 4, 5, 6]\n  moveList.forEach(move => {\n    if (move !== -1) {\n      const col = move % 7\n      lowestUnclaimedCells[col] = (move + 7)\n    }\n  })\n  return lowestUnclaimedCells\n}\n\n// Returns one of 'playerOnesTurn', 'playerTwosTurn', 'playerOneWins', 'playerTwoWins', 'gameOverDraw'\n// This function efficiently checks to see if the last move created a win for the player who made it.\n// If not it checks to see if the board was filled by the last move.\n// If not then that game must continue this method returns whose turn it is. \nexport function getGameStatus(moveList) {\n  // return early, no need to look for a win before player one has made four moves\n  if (nonSkippedTurns(moveList).length < 7) {  \n    return (moveList.length % 2 === 0) ? 'playerOnesTurn' : 'playerTwosTurn'\n  }\n  let lastPlayerToMove = (moveList.length % 2 === 1) ? \"playerOne\" : \"playerTwo\"\n  let lastPlayersMoves = moveList.filter((move, turn) => turn % 2 !== moveList.length % 2)\n\n  let lastMoveMade = moveList.slice(-1)\n  let linesAffectedByLastMove = linesThatContainCell[lastMoveMade]\n  console.log(`linesAffectedByLastMove --> ${linesAffectedByLastMove}`);\n  for (let i = 0; i < linesAffectedByLastMove.length; i++) {\n    let line = linesAffectedByLastMove[i]\n    let cells = cellsInLine[line]\n    if (intersect(cells, lastPlayersMoves).length === 4) {\n      return (lastPlayerToMove === 'playerOne') ? 'playerOneWins' : 'playerTwoWins'\n    }\n  }\n  if (boardIsFull(moveList)) {\n    return 'gameOverDraw'\n  }\n  else {\n    return (moveList.length % 2 === 0) ? 'playerOnesTurn' : 'playerTwosTurn'\n  }\n}\n\nexport function getBoardData(moveList) {\n  let data = new Array(42).fill(\"unclaimed\")\n  moveList.forEach((move, turn) => {\n    if (move !== -1) {\n      let player = turn % 2 === 0 ? \"playerOne\" : \"playerTwo\"\n      data[move] = player\n    }\n  })\n  return data\n}\n\nexport function boardIsFull(moveList) {\n  if (moveList.length < 42) {\n    return false\n  }\n  else {\n    return (nonSkippedTurns(moveList).length === 42)\n  }\n}\n\nfunction nonSkippedTurns(moveList) {\n  return moveList.filter(cellId => cellId !== -1)\n}\n\n\nexport function getBotMove(moveList) {\n  let wins = getWinningMovesForBot(moveList)\n  let blocks = getDefensiveMovesForBot(moveList)\n  let legalMoves = getLegalMoves(moveList)\n\n  let winningMoves = intersect(wins, legalMoves)\n  let blockingMoves = intersect(blocks, legalMoves)\n\n  if (winningMoves.length > 0) {\n    console.log(`Bot found Winning move \"${wins}\" in legal options ${legalMoves}`);\n    return chooseRandomFromArray(winningMoves)\n  }\n  else if (blockingMoves.length > 0) {\n    console.log(`Choosing bot move with threats: ${blocks} and legal options ${legalMoves}`);\n    return chooseRandomFromArray(blockingMoves)\n  }\n  else {\n    console.log(`Choosing RANDOM bot move with NO ways to win and NO ways to block.`);\n    return chooseRandomFromArray(legalMoves)\n  }\n}\n\n\nfunction getLegalMoves(moveList) {\n  return getLowestUnclaimedCells(moveList).filter(cell => cell < 42)\n}\n\nfunction getDefensiveMovesForBot(moveList) {\n  let threats = []\n  let humansMoves = playerOnesMoves(moveList)\n  for (let lineId = 0; lineId < numberOfLines; lineId++) {\n    let cells = cellsInLine[lineId]\n    if (intersect(cells, humansMoves).length === 3) {\n      console.log(`Found Threat in Line ${lineId}: ${cellsInLine}`);\n      threats = threats.concat(cells.filter(cellId => !humansMoves.includes(cellId)))\n    }\n  }\n  console.log(`Found Threats: ${threats}`);\n  return threats\n}\n\n\n\nexport function getWinningMovesForBot(moveList) {\n  let wins = []\n  let botsMoves = playerTwosMoves(moveList)\n  for (let lineId = 0; lineId < numberOfLines; lineId++) {\n    let cells = cellsInLine[lineId]\n    if (intersect(cells, botsMoves).length === 3) {\n      wins = wins.concat(cells.filter(cellId => !moveList.includes(cellId)))\n    }\n  }\n  console.log(`Found Wins: ${wins}`);\n  return wins\n}\n\n\nfunction playerOnesMoves(moveList) {\n  return moveList.filter((move, turn) => turn % 2 === 1)\n}\nfunction playerTwosMoves(moveList) {\n  return moveList.filter((move, turn) => turn % 2 === 0)\n}","import { randomInt, chooseRandomFromArray } from \"../../_helpers/low-level\";\n\n\nconst missingMinuendInstructions = [\n    \"Minus how many?\",\n    \"Take away what?\",\n    \"How far apart?\",\n]\n\n\nexport function getCombiningQuestion(difficulty) {\n    console.assert((difficulty === \"easy\" || difficulty === \"medium\" || difficulty === \"hard\"), `getCombiningQuestion recieved invalid difficulty ${difficulty}` )\n    // console.log(`Generating Combining Question of difficulty \"${difficulty}\"`)\n    \n    let types = [\n        missingSumTwo,\n        missingSumThree,\n        missingDifference,\n        missingAddendTwo,\n        missingAddendThree,\n        doubleTripleQuadruple,\n        howFarApart,\n        missingMinuend\n    ]\n    return chooseRandomFromArray(types)(difficulty)\n    \n}\n\n\n/////////////////////////////////////////////////////////////////\n//  INSTRUCTIONS\n/////////////////////////////////////////////////////////////////\n\nconst missingSumInstructions = [\n    \"Add\",\n    \"What's the Sum?\",\n    \"Find the Total\"\n]\nconst missingDifferenceInstructions = [\n    \"Subtract\",\n    \"Find the Difference\",\n    \"How much is left?\"\n]\nconst missingAddendInstructions = [\n    \"Plus what?\",\n    \"Add how many?\",\n    \"How many more?\"\n]\nconst howFarApartInstructions = [\n    \"How far apart?\"\n]\n\nfunction missingSumTwo(difficulty) { \n    let vars = {}\n    if (difficulty === \"easy\") {            // Grade 1\n        vars.a = randomInt(3,20)\n        vars.b = randomInt(3,20)\n    }\n    else if (difficulty === \"medium\") {     // Grade 2\n        vars.a = randomInt(20, 100)\n        vars.b = randomInt(20, 100)\n    }\n    else if (difficulty === \"hard\") {       // Grade 3\n        vars.a = randomInt(100, 1000)\n        vars.b = randomInt(100, 1000)\n    }\n    vars.c = vars.a + vars.b\n    return {\n        type: \"missingSumTwo\",\n        vars: vars,\n        correctAnswer: vars.c,\n        equationString: `${vars.a} + ${vars.b} = __`,\n        instructions: chooseRandomFromArray(missingSumInstructions),\n        inputType: \"textField\",\n    }\n}\nfunction missingSumThree(difficulty) {\n    let vars = {}\n    if (difficulty === \"easy\") {            // Grade 1\n        vars.a = randomInt(2, 13)\n        vars.b = randomInt(2, 13)\n        vars.c = randomInt(2, 13)\n    }\n    else if (difficulty === \"medium\") {     // Grade 2\n        vars.a = randomInt(10, 100)\n        vars.b = randomInt(10, 100)\n        vars.c = randomInt(10, 100)\n    }\n    else if (difficulty === \"hard\") {       // Grade 3\n        vars.a = randomInt(100, 600)\n        vars.b = randomInt(50, 100)\n        vars.c = randomInt(50, 100)\n    }\n    vars.d = vars.a + vars.b + vars.c\n    return {\n        type: \"missingSumThree\",\n        vars: vars,\n        correctAnswer: vars.d,\n        equationString: `${vars.a} + ${vars.b} + ${vars.c} =__`,\n        instructions: chooseRandomFromArray(missingSumInstructions),\n        inputType: \"textField\",\n    }\n}\nfunction missingDifference(difficulty) {\n    let vars = {}\n    if (difficulty === \"easy\") {            // Grade 1\n        vars.a = randomInt(10, 40)\n        vars.b = randomInt(3, 10)\n    }\n    else if (difficulty === \"medium\") {     // Grade 2\n        vars.a = randomInt(40, 200)\n        vars.b = randomInt(10, 40)\n    }\n    else if (difficulty === \"hard\") {       // Grade 3\n        vars.a = randomInt(300, 1000)\n        vars.b = randomInt(50, 300)\n    }\n    vars.c = vars.a - vars.b\n    return {\n        type: \"missingDifference\",\n        vars: vars,\n        correctAnswer: vars.c,\n        equationString: `${vars.a} - ${vars.b} = __`,\n        instructions: chooseRandomFromArray(missingDifferenceInstructions),\n        inputType: \"textField\",\n    }\n}\n\nfunction missingAddendTwo(difficulty) {\n    let vars = {}\n    if (difficulty === \"easy\") {            // Grade 1\n        vars.a = randomInt(10, 40)\n        vars.b = randomInt(3, 10)\n        vars.c = vars.a + vars.b\n    }\n    else if (difficulty === \"medium\") {     // Grade 2\n        vars.a = randomInt(40, 200)\n        vars.b = randomInt(10, 40)\n        vars.c = vars.a + vars.b\n    }\n    else if (difficulty === \"hard\") {       // Grade 3\n        vars.a = randomInt(100, 700)\n        vars.b = randomInt(50, 300)\n        vars.c = vars.a + vars.b\n    }\n    return {\n        type: \"missingAddendTwo\",\n        vars: vars,\n        correctAnswer: vars.b,\n        equationString: `${vars.a} + __ = ${vars.c}`,\n        instructions: chooseRandomFromArray(missingAddendInstructions),\n        inputType: \"textField\",\n    }\n}\nfunction missingAddendThree(difficulty) {\n    let vars = {}\n    if (difficulty === \"easy\") {            // Grade 1\n        vars.a = randomInt(2, 12)\n        vars.b = randomInt(2, 12)\n        vars.c = randomInt(2, 12)\n    }\n    else if (difficulty === \"medium\") {     // Grade 2\n        vars.a = randomInt(11, 33)\n        vars.b = randomInt(11, 33)\n        vars.c = randomInt(11, 33)\n    }\n    else if (difficulty === \"hard\") {       // Grade 3\n        vars.a = randomInt(30, 100)\n        vars.b = randomInt(30, 100)\n        vars.c = randomInt(30, 100)\n    }\n    vars.d = vars.a + vars.b + vars.c\n    return {\n        type: \"missingAddendThree\",\n        vars: vars,\n        correctAnswer: vars.c,\n        equationString: `${vars.a} + ${vars.b} + __ = ${vars.d}`,\n        instructions: chooseRandomFromArray(missingAddendInstructions),\n        inputType: \"textField\",\n    }\n}\nfunction howFarApart(difficulty) {\n    let vars = {}\n    if (difficulty === \"easy\") {            // Grade 1\n        vars.a = randomInt(3, 10)\n        vars.b = randomInt(10, 20)\n    }\n    else if (difficulty === \"medium\") {     // Grade 2\n        vars.a = randomInt(10, 40)\n        vars.b = randomInt(20, 100)\n    }\n    else if (difficulty === \"hard\") {       // Grade 3\n        vars.a = randomInt(100, 1000)\n        vars.b = randomInt(100, 1000)\n    }\n    vars.c = Math.abs(vars.a - vars.b)\n    return {\n        type: \"howFarApart\",\n        vars: vars,\n        correctAnswer: vars.c,\n        equationString: `${vars.a}  &  ${vars.b}`,\n        instructions: chooseRandomFromArray(howFarApartInstructions),\n        inputType: \"textField\",\n    }\n}\n\n// DOUBLE TRIPLE QUADRUPLE\nfunction doubleTripleQuadruple(difficulty) {\n    let vars = {}\n    let dtqInstructions = \"\"\n    if (difficulty === \"easy\") {            // Grade 1\n        dtqInstructions = \"Double\"\n        vars.a = randomInt(3, 20)\n        vars.b = vars.a * 2\n    }\n    else if (difficulty === \"medium\") {     // Grade 2\n        dtqInstructions = \"Triple\"\n        vars.a = randomInt(20, 100)\n        vars.b = vars.a * 3\n    }\n    else if (difficulty === \"hard\") {       // Grade 3\n        dtqInstructions = chooseRandomFromArray([\"Quadruple\", \"Double Double\"])\n        vars.a = randomInt(20, 250)\n        vars.b = vars.a * 4\n    }\n    return {\n        type: \"doubleTripleQuadruple\",\n        vars: vars,\n        correctAnswer: vars.b,\n        equationString: `${vars.a}`,\n        instructions: dtqInstructions,\n        inputType: \"textField\",\n    }\n\n}\n\nfunction missingMinuend(difficulty) {\n    let vars = {}\n    if (difficulty === \"easy\") {            // Grade 1\n        vars.a = randomInt(3, 20)\n        vars.b = randomInt(0, vars.a)\n        vars.c = vars.a - vars.b\n    }\n    else if (difficulty === \"medium\") {     // Grade 2\n        vars.a = randomInt(40, 100)\n        vars.b = randomInt(5, vars.a)\n        vars.c = vars.a - vars.b\n    }\n    else if (difficulty === \"hard\") {       // Grade 3\n        vars.a = randomInt(200, 1000)\n        vars.b = randomInt(100, vars.a)\n        vars.c = vars.a - vars.b\n    }\n    return {\n        type: \"missingMinuend\",\n        vars: vars,\n        correctAnswer: vars.b,\n        equationString: `${vars.a} - __ = ${vars.c}`,\n        instructions: chooseRandomFromArray(missingMinuendInstructions),\n        inputType: \"textField\",\n    }\n}\n\n\n\n// [\"compareSums\", `${vars[0]} + ${vars[1]} __ ${vars[2]} + ${vars[3]}`],\n","import { randomInt, chooseRandomFromArray } from \"../../_helpers/low-level\";\n\n\nexport function getMultiplyingQuestion(difficulty) {\n    console.assert((difficulty === \"easy\" || difficulty === \"medium\" || difficulty === \"hard\"), `getMultiplyingQuestion recieved invalid difficulty ${difficulty}`)\n    // console.log(`Generating Multiplying Question of difficulty \"${difficulty}\"`)\n    \n    let types = [\n        missingProductTwo,\n        missingProductThree,\n        missingFactorTwo,\n        missingFactorThree,\n        halfThirdQuarter,\n        missingQuotient, \n        missingDivisor\n    ]\n    return chooseRandomFromArray(types)(difficulty)\n\n}\n\nconst mediumFactor = () => chooseRandomFromArray([4, 5, 6, 7, 8, 9, 10, 15, 20, 25, 30, 40, 45, 50, 60, 70, 75, 80, 90])\n\n\n/////////////////////////////////////////////////////////////////\n//  INSTRUCTIONS\n/////////////////////////////////////////////////////////////////\nconst missingProductInstructions = [\n    \"Multiply\",\n    \"Find the Product\",\n]\nconst missingFactorInstructions = [\n    \"What's missing?\",\n    \"Times what?\"\n]\nconst missingDivisorInstructions = [\n    \"Find the Divisor\",\n    \"How many groups of...\",\n    \"Divide by what?\"\n]\nconst missingQuotientInstructions = [\n    \"Find the Quotient\",\n    \"How many per group?\"\n]\n\n// MISSING PRODUCT\nfunction missingProductTwo(difficulty) {\n    let vars = {}\n    if (difficulty === \"easy\") {            // Grade 2\n        vars.a = randomInt(2, 11)\n        vars.b = randomInt(2, 11)\n    }\n    else if (difficulty === \"medium\") {     // Grade 3\n        vars.a = mediumFactor()\n        vars.b = randomInt(2, 16)\n    }\n    else if (difficulty === \"hard\") {       // Grade 5\n        vars.a = randomInt(11, 100)\n        vars.b = randomInt(11, 50)\n    }\n    vars.c = vars.a * vars.b\n\n    return {\n        type: \"missingProductTwo\",\n        vars: vars,\n        correctAnswer: vars.c,\n        equationString: `${vars.a} x ${vars.b} = __`,\n        instructions: chooseRandomFromArray(missingProductInstructions),\n        inputType: \"textField\",\n    }\n}\nfunction missingProductThree(difficulty) {\n    let vars = {}\n    if (difficulty === \"easy\") {\n        vars.a = randomInt(2, 7)\n        vars.b = randomInt(2, 7)\n        vars.c = randomInt(2, 7)\n    }\n    else if (difficulty === \"medium\") {\n        vars.a = randomInt(2, 11)\n        vars.b = randomInt(2, 11)\n        vars.c = randomInt(2, 11)\n    }\n    else if (difficulty === \"hard\") {\n        vars.a = randomInt(2, 26)\n        vars.b = randomInt(2, 16)\n        vars.c = randomInt(2, 11)\n    }\n    vars.d = vars.a * vars.b * vars.c\n    return {\n        type: \"missingProductThree\",\n        vars: vars,\n        correctAnswer: vars.d,\n        equationString: `${vars.a} x ${vars.b} x ${vars.c} = __`,\n        instructions: chooseRandomFromArray(missingProductInstructions),\n        inputType: \"textField\",\n    }\n}\n\n\n// MISSING FACTOR\nfunction missingFactorTwo(difficulty) {\n    let vars = {}\n    if (difficulty === \"easy\") {\n        vars.a = randomInt(2, 11)\n        vars.b = randomInt(2, 11)\n    }\n    else if (difficulty === \"medium\") {\n        vars.a = randomInt(5, 31)\n        vars.b = mediumFactor()\n    }\n    else if (difficulty === \"hard\") {\n        vars.a = randomInt(20, 100)\n        vars.b = randomInt(5, 20)\n    }\n    vars.c = vars.a * vars.b\n    return {\n        type: \"missingFactorTwo\",\n        vars: vars,\n        correctAnswer: vars.b,\n        equationString: `${vars.a} x __ = ${vars.c}`,\n        instructions: chooseRandomFromArray(missingFactorInstructions),\n        inputType: \"textField\",\n    }\n}\nfunction missingFactorThree(difficulty) {\n    let vars = {}\n    if (difficulty === \"easy\") {\n        vars.a = randomInt(2, 7)\n        vars.b = randomInt(2, 7)\n        vars.c = randomInt(2, 7)\n    }\n    else if (difficulty === \"medium\") {\n        vars.a = randomInt(3, 11)\n        vars.b = randomInt(3, 11)\n        vars.c = randomInt(3, 11)\n    }\n    else if (difficulty === \"hard\") {\n        vars.a = randomInt(4, 26)\n        vars.b = randomInt(4, 11)\n        vars.c = randomInt(4, 16)\n    }\n    vars.d = vars.a * vars.b * vars.c\n\n    return {\n        type: \"missingFactorThree\",\n        vars: vars,\n        correctAnswer: vars.c,\n        equationString: `${vars.a} x ${vars.b} x __ = ${vars.d}`,\n        instructions: chooseRandomFromArray(missingFactorInstructions),\n        inputType: \"textField\",\n    }\n}\n\n\n// MISSING DIVIDEND\n\n\n// MISSING DIVISOR\nfunction missingDivisor(difficulty) {\n    let vars = {}\n    if (difficulty === \"easy\") {\n        vars.b = randomInt(2, 10)\n        vars.c = randomInt(2, 11)\n    }\n    else if (difficulty === \"medium\") {\n        vars.b = randomInt(3, 12)\n        vars.c = randomInt(3, 16)\n    }\n    else if (difficulty === \"hard\") {\n        vars.b = mediumFactor()\n        vars.c = randomInt(3, 16)\n    }\n    vars.a = vars.b * vars.c\n\n    return {\n        type: \"missingDivisor\",\n        vars: vars,\n        correctAnswer: vars.b,\n        equationString: `${vars.a} ÷ __ = ${vars.c}`,\n        instructions: chooseRandomFromArray(missingDivisorInstructions),\n        inputType: \"textField\",\n    }\n}\n\n\n// MISSING QUOTIENT\nfunction missingQuotient(difficulty) {\n    let vars = {}\n    if (difficulty === \"easy\") {\n        vars.b = randomInt(2, 10)\n        vars.c = randomInt(2, 11)\n    }\n    else if (difficulty === \"medium\") {\n        vars.b = mediumFactor()\n        vars.c = randomInt(3, 12)\n    }\n    else if (difficulty === \"hard\") {\n        vars.b = mediumFactor()\n        vars.c = randomInt(12, 26)\n    }\n    vars.a = vars.b * vars.c\n    return {\n        type: \"missingQuotient\",\n        vars: vars,\n        correctAnswer: vars.c,\n        equationString: `${vars.a} ÷ ${vars.b} = __`,\n        instructions: chooseRandomFromArray(missingQuotientInstructions),\n        inputType: \"textField\",\n    }\n}\n// DOUBLE TRIPLE QUADRUPLE  --> Now lives in Combining\n// HALF THIRD QUARTER \nfunction halfThirdQuarter(difficulty) {\n    let vars = {}\n    let instructions = \"\"\n    if (difficulty === \"easy\") {            // Grade 1\n        instructions = \"What's half of\"\n        // instructions = chooseRandomFromArray([\"What's half of\", \"Split evenly\"])\n        vars.a = randomInt(3, 50)\n        vars.b = vars.a * 2\n    }\n    else if (difficulty === \"medium\") {     // Grade 2\n        instructions = \"What's a third of\"\n        // instructions = chooseRandomFromArray([\"Find a third of\", \"Split three ways\"])\n        vars.a = randomInt(20, 100)\n        vars.b = vars.a * 3\n    }\n    else if (difficulty === \"hard\") {       // Grade 3\n        instructions = \"What's a quarter of\"\n        // instructions = chooseRandomFromArray([\"Find a quarter of\", \"Half and half again\"])\n        vars.a = randomInt(20, 250)\n        vars.b = vars.a * 4\n    }\n    return {\n        type: \"doubleTripleQuadruple\",\n        vars: vars,\n        correctAnswer: vars.a,\n        equationString: `${vars.b} ?`,\n        instructions: instructions,\n        inputType: \"textField\",\n    }\n}\n\n// [\"completeMultiplication\", `${vars[0]} x ${vars[1]} = ${vars[2]} x __`],\n        // [\"divisibility\", \"divisibilityCheckboxes\"],\n// [\"divisibility\", \"divisibilityCheckboxes NOT BUILT YET\"],  \n\n// [\"completeMultiplication\", chooseRandomFromArray([\"Find that factor!\", \"How many copies?\"])],\n//     [\"compareFractions\", chooseRandomFromArray([\"Which is more?\", \"Compare\", \"Which is greater?\"])],\n//     [\"compareSums\", chooseRandomFromArray([\"Which is more?\", \"Compare\", \"Which is greater?\"])],\n//     [\"divisibility\", chooseRandomFromArray([\"Is divisible by...\", \"Is a multiple of...\"])],","import { getCombiningQuestion } from \"./combiningGenerator\";\nimport { getMultiplyingQuestion } from \"./multiplyingGenerator\";\n// import { getFractionsQuestion } from \"./fractionsGenerator\";\n\nexport function testQuestion() {\n    let vars = [1, 2, 3, 6]\n    return {\n        type: \"missingSumThree\",\n        vars: vars,\n        correctAnswer: vars[3],\n        equationString: `${vars[0]} + ${vars[1]} + ${vars[2]} = __`,\n        instructions: \"Test Question\",\n        inputType: \"textField\",\n    }\n}\n\nlet generatorFuntions = new Map([\n    ['combine', getCombiningQuestion],\n    ['multiply', getMultiplyingQuestion]\n])\n\nexport function generateQuestion(topic, difficulty) {\n  return new Promise((resolve, reject) => {\n    let question = (generatorFuntions.get(topic)(difficulty))\n    // console.log(`Generated an \"${difficulty}\" ${topic} Question --> ${JSON.stringify(question, null, 4)}`);\n    resolve(question)\n  });\n}\n\n// function getSequencesQuestion(difficulty) {\n\n// }\n// function getFractionsQuestion(difficulty) {\n\n// }\n// function getExponentsQuestion(difficulty) {\n\n// }\n\n","import React, { useState, useEffect, createContext, useContext } from \"react\";\nimport { AppContext } from \"../../../../AppContext\";\n\nimport { \n  getBoardData,\n  getGameStatus,\n  getLowestUnclaimedCells\n } from \"./moveListHelpers\";\n\nimport { testQuestion } from './questionGenerators/questionGenerator'\n\nexport const ConnectFourContext = createContext();\n// ConnectFourContext.displayName(\"Connect Four Context\")\n\nexport const ConnectFourContextProvider = props => {\n  const { maxSquareSideLength } = useContext(AppContext)\n\n  const gameBoardConstants = {\n    oneSixth: '16.665%',\n    oneSeventh: '14.287%',\n    sixSevenths: '85.714%',\n    chipSizeRelativeToSquare: '84%',\n    rowNumbers: [0, 1, 2, 3, 4, 5],\n    columnNumbers: [0, 1, 2, 3, 4, 5, 6],\n    columnLetters: ['A', 'B', 'C', 'D', 'E', 'F', 'G'],\n    boardSideLength: (maxSquareSideLength - 96),\n    buttonContainerHeight: 96,\n    zIndex: {\n      chip: 100,\n      board: 200,\n    }\n\n  }\n\n  const defaultSettings = {\n    opponent: 'human',\n    topics: ['combine', 'multiply'],    // One of 'doubleTriple', 'halfThird'\n    difficultyMode: \"increasing\"        // One of \"easy\" \"medium\" \"hard\" \"increasing\"\n  }\n  const [settings, setSettings] = useState(defaultSettings)\n\n  // GAME State\n  const [moveList, setMoveList] = useState([])  // The ids of the cells claimed in order with -1 indicating skipped turns\n  \n  const [gameStatus, setGameStatus] = useState('playerOnesTurn')  // Enum ['playerOnesTurn', 'playerTwosTurn', 'playerOneWins', 'playerTwoWins', 'gameOverDraw'\n  const [boardData, setBoardData] = useState(new Array(42).fill('unclaimed')) // Indices correspond to cell ids, each value is one of \"unclaimed\" \"playerOne\" or \"playerTwo\"\n  const [nextPlayer, setNextPlayer] = useState('playerOne')\n  const [gameIsOver, setGameIsOver] = useState(false)\n  const [lowestUnclaimedCells, setLowestUnclaimedCells] = useState(gameBoardConstants.columnNumbers)\n  const [playerOnesMoves, setPlayerOnesMoves] = useState([])\n  const [playerTwosMoves, setPlayerTwosMoves] = useState([])\n\n  const [openModal, setOpenModal] = useState(\"welcome\") // Enum: \"none\", \"question\", \"settings\", \"welcome\"\n  const [activeCell, setActiveCell] = useState(null) \n  const [question, setQuestion] = useState(testQuestion())\n  const [headerText, setHeaderText] = useState(\"\")\n\n  const [isBotsTurn, setIsBotsTurn] = useState(false)\n\n  useEffect(() => {\n    const updatedGameStatus = getGameStatus(moveList)\n    setGameStatus(updatedGameStatus)\n    setBoardData(getBoardData(moveList))\n    setNextPlayer((moveList.length % 2 === 0) ? \"playerOne\" : \"playerTwo\")\n    setGameIsOver(['gameOverDraw','playerOneWins', 'playerTwoWins'].includes(updatedGameStatus))\n\n    setPlayerOnesMoves(moveList.filter((cell, turn) => turn % 2 === 0).filter(cell => cell !== -1))\n    setPlayerTwosMoves(moveList.filter((cell, turn) => turn % 2 === 1).filter(cell => cell !== -1))\n\n    setLowestUnclaimedCells(getLowestUnclaimedCells(moveList))\n\n    setActiveCell(null) \n    setHeaderText(\"\")\n\n  },[moveList])\n\n  const connectFourContext = {\n    settings, setSettings,\n    moveList, setMoveList,\n    \n    gameStatus,\n    boardData,\n    nextPlayer,\n    gameIsOver,\n    playerOnesMoves,\n    playerTwosMoves,\n\n    lowestUnclaimedCells,\n\n    gameBoardConstants,\n\n\n    openModal, setOpenModal,\n    activeCell, setActiveCell,\n    question, setQuestion,\n    headerText, setHeaderText,\n\n    isBotsTurn, setIsBotsTurn\n\n  }\n\n  return (\n    <ConnectFourContext.Provider \n      value={connectFourContext} \n      children={props.children}\n    />\n  )\n};\n\n","import React, { useContext } from 'react'\nimport { Box } from '@mui/material'\n\nimport { AppContext } from \"../../../../../AppContext\";\n\nexport function MaxSquareArea(props) {\n  const { maxSquareSideLength } = useContext(AppContext)\n  return (\n    <Box \n      children={props.children}\n      display='flex'\n      flexDirection='column'\n      alignItems='center'\n      height={maxSquareSideLength}\n      width={maxSquareSideLength}\n      position='relative'\n    />\n  )\n}","import React, { useContext } from 'react'\nimport { Box, Button, Typography, Zoom, Dialog,  } from '@mui/material';\n\n// CONTEXT \nimport { AppContext } from \"../../../../../AppContext\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Zoom ref={ref} {...props} />;\n})\n\nexport function WelcomeModal(props) {\n    let { open, openSettingsModal } = props\n\n    const { maxSquareSideLength } = useContext(AppContext)\n\n    return (\n        <Dialog\n          open={open}\n          aria-describedby=\"welcome dialog\"\n          TransitionComponent={Transition}\n          fullWidth\n          maxWidth='md'\n          PaperProps={{\n            sx: {\n              height: `${0.85 * maxSquareSideLength}px`,\n              width: `${0.7 * maxSquareSideLength}px`,\n              minHeight: \"550px\",\n              minWidth: \"375px\",\n              display: 'flex',\n              p: 3,\n              borderRadius: 6,\n              overflowY: \"scroll\",\n              \"msOverflowStyle\": \"none\",    /* IE and Edge */\n              \"scrollbarWidth\": \"none\",       /* Firefox */\n              \"::-webkit-scrollbar\": {         /* Hide scrollbar for Chrome, Safari and Opera */\n                display: \"none\"\n              }\n            }\n          }}\n        >\n            \n          <Typography variant='h4' align=\"center\" >\n            Math Fact Connect Four\n          </Typography>\n          \n          <PlayNowButton openSettingsModal={openSettingsModal} />\n\n          {/* TODO --> Add \"sign in and play\" beside \"play without signing in\" */}\n\n          <Typography variant='h5'  >\n            Rules of Play\n          </Typography>\n          <Typography gutterBottom  >\n            Two players (or teams) take turns picking a column to drop a chip in.\n            Chips always fall to the lowest available space in the selected column.\n            The first to get four consecutive chips in any row, column, or diagonal wins!\n            But there's a catch: A math quetion will pop up when you selecet a column and you must answer it correctly or your turn will be skipped!\n          </Typography>\n          \n          <Typography variant='h5'>\n              Suggested Use\n          </Typography>\n          <Typography gutterBottom  >\n            Learning math foundations takes a lot of practice. There is no substitute for repetition. \n            The goal of this project is to make doing all that repetitive practice a little less dull, \n            and a little more joyful.\n          </Typography>\n          <Typography gutterBottom  >\n            All the questions in this game were designed to be solved mentally.\n            Use your fingers if you have to, but no paper-and-pencil! \n            Push yourself to try new mental math strategies like \"stepping stones\" and \"factor it first\".\n          </Typography>\n          <Typography gutterBottom  >\n            By default the questions increase in difficulty as the game progresses but you can also \n            set it to ask questions of only one difficulty level throughout the game. This is particularly \n            useful when working with younger students. \n          </Typography>\n\n          <Typography variant='h5' >\n              Note on Time Limits\n          </Typography>\n          <Typography gutterBottom  >\n            Some students enjoy playing this game with a two-sided game timer (chess clock). \n            When doing this it is good to give each team about 10 minutes for the whole game.\n            That said, there is no timer built into this game on purpose. Most students report \n            feeling anxious and having less fun, and answer questions less accurately when playing with a timer.\n          </Typography>\n          <Typography gutterBottom  >\n            Accuracy is more imporatant than speed. \n            Starting out, your focus should be on getting questions right, on holding all the\n            moving pieces in your mind. Accuracy results from focus, conceptual understanding, and effort.\n            Speed is just a pleasant side-effect of lots of practice.\n          </Typography>\n\n          <Typography variant='h5' >\n              Thanks\n          </Typography>\n          <Typography gutterBottom  >\n              I want to thank my students at College Track, the Waldorf School of New Orleans, and Bricolage Academy\n              for inspiring me to create this game and helping me to test and improve it. This game was originally played\n              using laminated cards hung on the wall. It was my students' enthusiastic responses to this game that made me \n              want to convert it to a free web app so I could share it with other teachers and students.\n          </Typography>\n\n          <Typography variant='h5'  >\n              Dig Deeper\n          </Typography>\n          <Typography gutterBottom  >\n              The code for this project is all open-source so if your are curious how it works behind the scenes visit my <a href='https://github.com/nolastemgarden' >GitHub</a> page.\n              If you find a mistake or have an idea for how to improve this game, please open an issue.\n          </Typography>\n          <Typography color=\"text.primary\" >\n              A production of the NOLA STEM Garden &copy;\n          </Typography>\n        </Dialog>\n    )\n\n    function PlayNowButton() {\n        return (\n            <Box m={3} sx={{ display: 'flex', justifyContent: \"center\" }} >\n                <Button\n                  onClick={openSettingsModal}\n                  variant='contained'\n                  sx={{\n                    m: 1,\n                    width: '66%'\n                  }}\n                  children=\"Start Game\"\n                />\n            </Box>\n            \n        )\n    }\n}\n\n","import React, { useContext } from 'react'\n\n// MUI  components\nimport { Box, Button, IconButton, Dialog, Zoom, Typography } from '@mui/material'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUserFriends, faRobot } from '@fortawesome/free-solid-svg-icons';\n\n// CONTEXT \nimport { ConnectFourContext } from \"../ConnectFourContext\";\n\n// ICONS\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n// import { faRobot, faUser, faPlus, faTimes, faDivide, faSuperscript } from '@fortawesome/free-solid-svg-icons'\n// const RobotIcon = () => { return <FontAwesomeIcon icon={faRobot} /> }\n// const UserIcon = () => { return <FontAwesomeIcon icon={faUser} /> }\n// const PlusIcon = () => { return <FontAwesomeIcon icon={faPlus} /> }\n// const TimesIcon = () => { return <FontAwesomeIcon icon={faTimes} /> }\n// const DivideIcon = () => { return <FontAwesomeIcon icon={faDivide} /> }\n// const SuperscriptIcon = () => { return <FontAwesomeIcon icon={faSuperscript} /> }\n// import { faPlus, faTimes, faDivide, faSuperscript } from '@fortawesome/free-solid-svg-icons'\n\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Zoom ref={ref} {...props} />;\n})\n\nexport function SettingsModal(props) {\n  const { open, startNewGame, cancelNewGame } = props\n  const { settings, setSettings } = useContext(ConnectFourContext)\n\n  let noneSelectedError = settings.topics.length === 0;\n\n  function toggleTopic(topic) {\n    let updatedTopicsArray = []\n    const selected = settings.topics.includes(topic)\n    if (selected) {\n      updatedTopicsArray = settings.topics.filter(item => item !== topic)\n      setSettings(prev => { return {...prev, topics: updatedTopicsArray }})\n    }\n    else {\n      updatedTopicsArray = settings.topics.concat(topic)\n      setSettings(prev => { return {...prev, topics: updatedTopicsArray }})\n    }\n  }\n\n  function selectOpponent(opponent) {\n    setSettings(prev => { return {...prev , opponent: opponent}})\n  }\n\n  function selectDifficulty(difficultyMode) {\n    setSettings(prev => { return {...prev, difficultyMode: difficultyMode}})\n  }\n  \n  return (\n    <Dialog\n      open={open}\n      aria-describedby=\"game settings dialog\"\n      TransitionComponent={Transition}\n      fullWidth={true}\n      maxWidth='md'\n      \n      PaperProps={{\n        sx: {\n          // height: `${0.9 * maxSquareSideLength}px`,\n          // width: `${0.75 * maxSquareSideLength}px`,\n          height: '90%',\n          width: '85%',\n          maxHeight: '600px',\n          maxWidth: '450px',\n          display: 'flex',\n          p: 3,\n          borderRadius: 6,\n          overflowY: \"scroll\",\n        }\n      }}\n    >\n      <OpponentSelector />\n      <TopicSelector />\n      <DifficultyModeSelector />\n      <StartAndCancelButtons />\n      \n    </Dialog>\n  )\n\n  function OpponentSelector() {\n    const OpponentIconButton = (props) => {\n      const { opponent, icon } = props\n      let selected = (settings.opponent === opponent)\n      return (\n        <IconButton\n          children={<FontAwesomeIcon icon={icon} size=\"2x\" />}\n          onClick={() => selectOpponent(opponent)}\n          color={selected ? \"primary\" : \"secondary\"} \n        />\n      )\n    }\n    return (\n      <Box  \n        display='flex' \n        flex='1 1 25%'\n        flexDirection='column' \n      >\n        <Typography\n          variant='h5'\n          align=\"center\"\n          children=\"Play vs. Human or Bot?\"\n        />\n        <Box display='flex' flexDirection='row' justifyContent='space-evenly' p={1} >\n          <OpponentIconButton opponent='human' icon={faUserFriends} />\n          <OpponentIconButton opponent='bot' icon={faRobot} />\n        </Box>\n      </Box>\n    )\n  }\n  \n  function TopicSelector() {\n    const TopicButton = (props) => {\n      const { topic, label } = props\n      const selected = (settings.topics.includes(topic))\n      return (\n        <Button\n          onClick={() => toggleTopic(topic)}\n          variant={selected ? \"contained\" : \"outlined\"}\n          sx={{ m: '0.25rem' }}\n          children={label}\n        />\n      )\n    }\n    const InvalidSelectionHelperText = () => {\n      return (\n        <Typography\n          children=\"*** You must select at least one topic.\"\n          variant='body1'\n          align=\"center\"\n          color={noneSelectedError ? \"error\" : \"transparent\"}\n          // display={noneSelectedError ? \"flex\" : \"none\"}\n          gutterBottom\n        />\n      )\n    }\n    return (\n        <Box  \n          display='flex' \n          flex='1 1 25%'  \n          flexDirection='column' \n        >\n          <Typography\n            variant='h5'\n            align=\"center\"\n            children=\"What math topics should we include?\"\n          />\n            <TopicButton topic='combine' label=\"Combine & Split Up\" />\n            <TopicButton topic='multiply' label=\"Multiply & Factor\" />\n            <InvalidSelectionHelperText />\n        </Box>\n    )\n  }\n\n  function DifficultyModeSelector() {\n    const DifficultyModeButton = (props) => {\n      const { mode } = props\n      const selected = (settings.difficultyMode === mode)\n      return (\n        <Button\n          onClick={() => selectDifficulty(mode)}\n          variant={selected ? \"contained\" : \"outlined\"}\n          sx={{\n            flex: '2 0 25%', \n            m: '0.25rem'\n          }}\n          children={(mode === \"increasing\") ? \"increasing difficulty\" : `${mode}`}\n        />\n      )\n    }\n    return (\n      <Box \n        display='flex' \n        flex='1 1 25%'\n        flexDirection='column' \n        pb={2}\n      >\n        <Typography variant='h5' align=\"center\"\n          children=\"How hard should the questions be?\"\n        />\n        <Box  \n          display='flex'\n          justifyContent='space-between'\n        >\n          <DifficultyModeButton mode=\"easy\" />\n          <DifficultyModeButton mode=\"medium\" />\n          <DifficultyModeButton mode=\"hard\" />\n        </Box>\n        <Box display='flex' >\n          <DifficultyModeButton mode=\"increasing\" />\n        </Box>\n      </Box>\n    )\n  }\n\n  function StartAndCancelButtons() {\n    return (\n      <Box  \n        borderTop='solid green 3px'\n        borderColor='primary.main'\n        display='flex'\n        flex='1 1 20%'\n        justifyContent='center'\n      >\n        <CancelButton cancelNewGame={cancelNewGame} />\n        <StartGameButton startNewGame={startNewGame} />\n      </Box>\n    )\n  }\n\n  function CancelButton(props) {\n    const { cancelNewGame } = props\n    return (\n      <Button\n        onClick={cancelNewGame}\n        variant='outlined'\n        disabled={noneSelectedError}\n        sx={{\n          m: 1,\n          mt: 3,\n          width: '40%'\n        }}\n        children=\"Cancel\"\n      />\n    )\n  }\n  function StartGameButton(props) {\n    const { startNewGame } = props\n    return (\n      <Button\n        onClick={() => startNewGame(settings)}\n        variant='contained'\n        disabled={noneSelectedError}\n        sx={{\n          m: 1,\n          mt: 3,\n          width: '40%'\n        }}\n        children=\"Start Game\"\n      />\n    )\n  }\n}\n\n\n","import React, { useState, useContext } from 'react'\n\n// MUI  components\nimport { Box, Button, Dialog, Zoom, Typography, FormControl, InputLabel, OutlinedInput } from '@mui/material'\n\n// CONTEXT \nimport { AppContext } from \"../../../../../AppContext\";\nimport { ConnectFourContext } from \"../ConnectFourContext\";\n\n// import { LayoutContext } from \"../contexts\";\n\n// Style & Layout Constants\nconst instructionsHeight = \"33%\"\nconst equationHeight = \"32%\"\nconst inputHeight = \"35%\"\n\nconst ZoomTransition = React.forwardRef(function Transition(props, ref) {\n    return <Zoom ref={ref} {...props} />;\n})\n\nexport function MathQuestionModal(props) {\n    let { open, question, headerText,  handleAnswerSubmit } = props \n\n    \n  // LAYOUT CONTEXT\n  const { maxSquareSideLength, navbarHeightPx } = useContext(AppContext)\n  const { nextPlayer } = useContext(ConnectFourContext)\n\n    \n    const { correctAnswer, equationString, inputType } = question\n    let borderColor = `connectFour.${nextPlayer}`\n\n    return (\n        <Dialog \n            // keepMounted\n            disableEscapeKeyDown\n            open={open}\n            onBackdropClick={() => {}}  // disable close on bg click\n            aria-describedby=\"math-question-dialog\"\n            TransitionComponent={ZoomTransition}\n            PaperProps={{\n              sx: {\n                border: `solid white 12px`,\n                borderColor: borderColor,\n                margin: `${0.05 * maxSquareSideLength}px`,\n                marginTop: `${navbarHeightPx}px`,\n                height: `${0.9 * maxSquareSideLength}px`,\n                width: `${0.9 * maxSquareSideLength}px`,\n                maxWidth: '100%',\n                borderRadius: '50%',\n              }\n            }}\n        >\n            <HeaderText headerText={headerText} />\n            <QuestionEquation equationString={equationString} />\n            <AnswerInputComponent \n              inputType={inputType}\n              correctAnswer={correctAnswer}\n              handleAnswerSubmit={handleAnswerSubmit}\n            />\n        </Dialog>\n    )\n    \n    function HeaderText(props) {\n        return (\n            <Typography id=\"Instructions\"\n                variant='h4'\n                sx={{\n                    height: instructionsHeight,\n                    width: '100%',\n                    display: 'flex',\n                    flexFlow: 'row wrap',\n                    justifyContent: 'center',\n                    alignItems: 'flex-end',\n                }}\n            >\n                {props.headerText}\n            </Typography>\n        )\n    }\n    function QuestionEquation(props) {\n        const { equationString } = props\n        const fontStyle = (equationString.length > 12) ? 'h2' : 'h1'\n\n        return (\n            <Typography variant={fontStyle} \n                sx={{\n                    width: '100%',\n                    height: equationHeight,\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    overflow: 'visible',\n                }}\n            >\n                {equationString}\n            </Typography>\n        )\n    }\n    function AnswerInputComponent(props) {\n        const { inputType, correctAnswer, handleAnswerSubmit } = props\n\n        const [playersAnswer, setPlayersAnswer] = useState(\"\")\n        const answerIsNum = /^\\d+$/.test(playersAnswer)\n        const error = (playersAnswer.length > 0 && !answerIsNum)\n        const handlePlayersAnswerChange = (event) => {\n            let updatedAnswer = event.target.value.trim()\n            setPlayersAnswer(updatedAnswer)\n        }\n\n        if (inputType === \"textField\") {\n            return (\n                <NumericalTextInput\n                    error={error}\n                    handleSubmitButtonClick={handleAnswerSubmit}\n                />\n            )\n        }\n        else if (inputType === \"compareButtons\") {\n            return (\n                <CompareButtons \n                    // handleSubmitButtonClick={() => handleAnswerSubmit(playersAnswer)}\n                />\n            )\n        }\n        else {\n            console.error(`getInputComponent failed. Invalid inputType: ${inputType}`)\n        }\n\n        function NumericalTextInput(props) {\n            const { error, handleSubmitButtonClick } = props\n\n            return (\n                <Box sx={{\n                    height: inputHeight,\n                    width: '100%',\n                    padding: '0 20%',\n                }}>\n                    <FormControl \n                        id=\"answer-input-form\"\n                        color=\"primary\"\n                        error={error}\n                        sx={{\n                            display: 'flex',\n                            flexFlow: 'row nowrap',\n                            justifyContent: 'center',\n                            alignItems: 'flex-start',\n                        }}\n                    >\n                        <InputLabel>{(error === false) ? \"Your Answer\" : \"Enter a whole number\"}</InputLabel>\n                        <OutlinedInput\n                            label={(error === false) ? \"Your Answer\" : \"Enter a whole number\"}\n                            value={playersAnswer}\n                            id=\"answer-input\"\n                            fullWidth\n                            size=\"medium\"\n                            autoFocus\n                            autoComplete='off'\n                            type=\"tel\"\n                            pattern='[0-9]*'\n                            onChange={handlePlayersAnswerChange}\n                            inputProps={{ \n                                style: { fontSize: '2rem', height: '2rem' }\n                            }}\n                            sx={{ width: '62%' }}\n                            onKeyDown={(event) => {\n                              if (event.key === \"Enter\" && playersAnswer !== \"\") {\n                                handleSubmitButtonClick(playersAnswer)\n                              }\n                            }}\n                        />\n                        <SubmitButton\n                            error={error}\n                            playersAnswer={playersAnswer}\n                            correctAnswer={correctAnswer}\n                            handleSubmitButtonClick={handleSubmitButtonClick}\n                        />\n                    </FormControl>\n                </Box>\n            )\n        }\n\n        function SubmitButton(props) {\n            const { error, playersAnswer, handleSubmitButtonClick } = props\n            return (\n                <Button\n                    disabled={error || playersAnswer === \"\" }\n                    onClick={() => handleSubmitButtonClick(playersAnswer)}\n                    variant='contained'\n                    sx={{ \n                        ml: 1, \n                        px: 2.5,\n                        lineHeight: '3rem',\n                        width: '42%'\n                    }}\n                    children=\"Submit\"\n                />\n            )\n        }\n\n        function CompareButtons(props) {\n            // let { handleSubmitButtonClick } = props\n\n            return (\n                <Box \n                    sx={{\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                    }}\n                >\n                    <Button />\n                    <Button />\n                    <Button />\n                </Box>\n            )\n        }\n    }\n}\n\n\n","import React, { useContext } from 'react'\nimport PropTypes from 'prop-types'\nimport { Box, Slide } from '@mui/material'\n\n// CONTEXT \nimport { ConnectFourContext } from '../ConnectFourContext';\n\nexport function Chip(props) {\n  const { id, containerRef } = props\n  const { boardData, gameBoardConstants } = useContext(ConnectFourContext)\n  const { zIndex, oneSixth, chipSizeRelativeToSquare } = gameBoardConstants\n\n  const color = boardData[id]\n  let bgcolor = `connectFour.${color}`\n  return (\n    <Slide \n      in={color !== 'unclaimed'}\n      timeout={300}\n      direction=\"down\"\n      container={containerRef.current}\n      // easing=\"easing.parabolicAcceleration\"\n    >\n      <Box id=\"transparentSquareFrame\"\n        width='100%'\n        height={oneSixth}\n        display='flex'\n        justifyContent='center'\n        alignItems='center'\n      >\n        <Box id=\"chip\"\n          borderRadius='50%'\n          zIndex={zIndex.board}\n          bgcolor={bgcolor}\n          width={chipSizeRelativeToSquare}\n          height={chipSizeRelativeToSquare}\n        />\n      </Box>\n    </Slide>\n  )\n}\nChip.propTypes = {\n  id: PropTypes.number.isRequired,\n  containerRef: PropTypes.object.isRequired\n}\n","import React, { useContext } from 'react'\nimport { Box } from '@mui/material'\n\nimport { ConnectFourContext } from \"../ConnectFourContext\";\n\nexport function ColumnOfSquaresWithHoles(props) {\n  const { gameBoardConstants } = useContext(ConnectFourContext)\n  const { zIndex, rowNumbers, oneSixth, oneSeventh, sixSevenths, chipSizeRelativeToSquare, } = gameBoardConstants\n\n  return (\n    <Box id=\"columnOfSquares\"\n      position='absolute'\n      top={oneSeventh}\n      bgcolor='transparent'\n      width='100%'\n      height={sixSevenths}\n      zIndex={zIndex.board}\n      display='flex'\n      flexDirection='column-reverse'\n    >\n      {rowNumbers.map(num => {\n        return (\n          <Box id=\"squareWithHole\"\n            key={num}\n            overflow='hidden'\n            width='100%'\n            height={oneSixth}\n            display='flex'\n            justifyContent='center'\n            alignItems='center'\n            boxShadow='0px 1px 1px 1px #0039cb'\n          >\n            <Box id=\"hole\"\n              boxShadow=\"0 0 0 99px #0039cb\"\n              borderRadius='50%'\n              bgcolor='transparent'\n              width={chipSizeRelativeToSquare}\n              height={chipSizeRelativeToSquare}\n            />\n          </Box>\n        )\n      })}\n    </Box>\n  )\n}\n\n","import React, { useContext } from 'react'\nimport { Box, Typography } from '@mui/material'\n\n// My Components\nimport { Chip } from \"./Chip\";\nimport { ColumnOfSquaresWithHoles } from \"./ColumnOfSquaresWithHoles\";\n\nimport { ConnectFourContext } from '../ConnectFourContext';\n\n\nexport function Column(props) {\n  const { index, handleColumnClick } = props\n  const { gameIsOver, nextPlayer, gameBoardConstants } = useContext(ConnectFourContext)\n  const { columnLetters, oneSeventh } = gameBoardConstants\n\n  let columnLetter = gameIsOver ? '' : columnLetters[index]\n  \n  return (\n    <Box id=\"column\" \n      onClick={() => handleColumnClick(index)}\n      position='relative'\n      width={oneSeventh}\n      height='100%'\n      sx={{\n        '&:hover #hoverChip': {\n          backgroundColor: `connectFour.${nextPlayer}`,\n        },\n      }}\n    >\n      <HoverChip columnLetter={columnLetter} />\n      <ChipContainer index={index} />\n      <ColumnOfSquaresWithHoles />\n    </Box>\n  );\n}\n\nfunction HoverChip(props) {\n  const { columnLetter } = props\n  const { gameBoardConstants } = useContext(ConnectFourContext)\n  const { oneSeventh, chipSizeRelativeToSquare } = gameBoardConstants\n\n  return (\n    <Box id=\"hoverChipContainer\"\n      height={oneSeventh}\n      zIndex={8}\n      display='flex'\n      alignItems='center'\n      justifyContent='center'\n    >\n      <Box id=\"hoverChip\"\n        bgcolor='background'\n        width={chipSizeRelativeToSquare}\n        height={chipSizeRelativeToSquare}\n        borderRadius='50%'\n        zIndex={8}\n        display='flex'\n        justifyContent='center'\n        alignItems='flex-end'\n        fontSize='2rem'\n      >\n        <Typography variant='h4' color='connectFour.text'  >\n          {columnLetter}  \n        </Typography>\n      </Box>\n    </Box>\n  )\n}\n\nfunction ChipContainer(props) {\n  const { index } = props\n  const { gameBoardConstants } = useContext(ConnectFourContext)\n  const { oneSeventh, sixSevenths, rowNumbers,  } = gameBoardConstants\n\n  const containerRef = React.useRef(null);\n  const cellsInColumn = rowNumbers.map(row => index + 7 * row)\n\n  return (\n    <Box \n      ref={containerRef}\n      width='100%'\n      position='absolute'\n      top={oneSeventh}\n      bgcolor='transparent'\n      height={sixSevenths}\n      zIndex={8}\n      display='flex'\n      flexDirection='column-reverse'\n    >\n      {cellsInColumn.map(cellId => {\n        return (\n          <Chip\n            key={cellId}\n            id={cellId}\n            containerRef={containerRef}\n          />\n        )\n      })}\n    </Box>\n  )\n}\n","import React, { useContext } from 'react'\nimport { Box, Typography, Zoom } from '@mui/material'\n\n// CONTEXT \nimport { ConnectFourContext } from '../ConnectFourContext';\n\nexport function InfoHeaderRow(props) {\n  const { gameIsOver, gameStatus, gameBoardConstants } = useContext(ConnectFourContext)\n  const { oneSeventh } = gameBoardConstants\n\n  let message = \"\"\n  if (gameIsOver) {\n    message = (gameStatus === \"playerOneWins\" ? \"Red Wins!\" : \"Yellow Wins!\")\n  }\n  \n  return (\n    <Box id='infoHeaderRow'\n      sx={{\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: oneSeventh,\n        zIndex: 15,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      <Zoom in={message !== \"\"} style={{ transitionDelay: '300ms' }} >\n        <Typography color='connectFour.text' variant='h2' align='center' >\n          {message}\n        </Typography>\n      </Zoom>\n    </Box>\n  )\n}","import React, { useContext } from 'react'\nimport { Box } from '@mui/material'\nimport { ConnectFourContext } from \"../ConnectFourContext\";\n\nexport function RoundedBorder(props) {\n  const { gameBoardConstants } = useContext(ConnectFourContext)\n  const { oneSeventh, sixSevenths } = gameBoardConstants\n  \n  return (\n    <Box \n      id='rounded_border'\n      boxSizing='content-box'\n      position='absolute'\n      top={oneSeventh}\n      left='-9px'\n      width='calc(100% - 2px)'\n      height={sixSevenths}\n      border=\"10px solid\"\n      borderColor=\"board.main\"\n      borderRadius=\"10px\"\n      borderTop={0}\n    />\n  )\n}\n","import React, { useContext } from 'react'\nimport { Box } from '@mui/material'\n\n// My Components\nimport { Column } from \"./Column\";\nimport { InfoHeaderRow } from \"./InfoHeaderRow\";\nimport { RoundedBorder } from \"./RoundedBorder\";\n\n// CONTEXT \nimport { ConnectFourContext } from '../ConnectFourContext';\n\nexport function GameBoard(props) {\n  const { handleColumnClick } = props\n  const { gameBoardConstants } = useContext(ConnectFourContext)\n  const { columnNumbers, boardSideLength } = gameBoardConstants\n  // console.log(`RENDERING GAME BOARD with MOVE LIST: ${moveList}`);\n  return (\n    <Box id=\"game_board\"\n      position='relative'\n      height={boardSideLength}\n      width={boardSideLength}\n      display='flex'\n      flexDirection='row'\n      alignItems='flex-end'\n    >\n      <InfoHeaderRow />  \n      {columnNumbers.map((columnIndex) => {\n        return (\n          <Column \n            key={columnIndex}\n            index={columnIndex}\n            handleColumnClick={handleColumnClick}\n          />\n        )\n      })}\n      <RoundedBorder />\n    </Box>\n  )\n}","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12.5 8c-2.65 0-5.05.99-6.9 2.6L2 7v9h9l-3.62-3.62c1.39-1.16 3.16-1.88 5.12-1.88 3.54 0 6.55 2.31 7.6 5.5l2.37-.78C21.08 11.03 17.15 8 12.5 8z\"\n}), 'Undo');","import React, { useContext } from 'react'\nimport { Box, Button } from '@mui/material'\n\n// Icons\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowRotateLeft } from '@fortawesome/free-solid-svg-icons';\nimport { Undo } from \"@mui/icons-material\";\n\nimport { ConnectFourContext } from '../ConnectFourContext';\n\nexport function NewGameAndUndoButtons(props) {\n  const { openSettingsModal, undoMove } = props\n  const { gameBoardConstants } = useContext(ConnectFourContext)\n  const { buttonContainerHeight } = gameBoardConstants\n\n  return (\n    <Box \n      height={buttonContainerHeight}\n      width='100%'\n      display='flex'\n      justifyContent='space-evenly'\n      alignItems='center'\n      px={4}\n    >\n      <NewGameButton  openSettingsModal={openSettingsModal} />\n      <UndoMoveButton undoMove={undoMove} />\n    </Box>\n  )\n}\n\nfunction NewGameButton(props) {\n  const { openSettingsModal } = props\n  return (\n    <Button\n      variant=\"contained\"\n      startIcon={<FontAwesomeIcon icon={faArrowRotateLeft} size='lg' />}\n      onClick={() => openSettingsModal()}\n      sx={{\n        flex: '1 0 25%',\n        mx: 1\n      }}\n    >\n      New&nbsp;Game\n    </Button>\n  )\n}\n\nfunction UndoMoveButton(props) {\n  const { undoMove } = props\n  return (\n    <Button\n      variant=\"contained\"\n      startIcon={<Undo />}\n      onClick={() => undoMove()}\n      sx={{\n        flex: '1 0 25%',\n        mx: 1\n      }}\n    >\n        Undo&nbsp;Move\n    </Button>\n  )\n}\n\n\n","export const waysToSayCorrect = [\n  \"Correct!\",\n  \"Right!\",\n  \"That's it!\",\n  \"Good job!\",\n  \"Very good!\"\n]","import React, { useContext } from 'react' \nimport { Box } from '@mui/material';\n\n\n// My Components\nimport { MaxSquareArea } from \"./components/MaxSquareArea\";\nimport { WelcomeModal } from \"./modals/WelcomeModal\";\nimport { SettingsModal } from \"./modals/SettingsModal\";\nimport { MathQuestionModal } from \"./modals/MathQuestionModal\";\nimport { GameBoard } from \"./components/GameBoard\";\nimport { NewGameAndUndoButtons } from \"./components/NewGameAndUndoButtons\";\n\n// Game Logic\nimport { generateQuestion } from './questionGenerators/questionGenerator'\nimport { waysToSayCorrect } from \"../_helpers/commentary\";\nimport { chooseRandomFromArray } from '../_helpers/low-level';\n\n\n// CONTEXT\nimport { AppContext } from \"../../../../AppContext\";\nimport { ConnectFourContext } from \"./ConnectFourContext\";\nimport { getGameStatus, getBotMove } from \"./moveListHelpers\";\n\nexport default function ConnectFourController(props) {\n  const { availableHeight  } = useContext(AppContext)\n  const { \n    settings, setSettings,\n    moveList, setMoveList,\n    playerOnesMoves, playerTwosMoves,\n    nextPlayer, gameIsOver, \n    lowestUnclaimedCells,  \n\n    openModal, setOpenModal,\n    activeCell, setActiveCell,\n    question, setQuestion,\n    headerText, setHeaderText,\n\n  } = useContext(ConnectFourContext)\n\n  ///////////////////////////////////////////////////////\n  // CLICK HANDLERS\n  ///////////////////////////////////////////////////////\n  function handleColumnClick(columnIndex) {\n    // console.log(`handleColumnClick for col ${columnIndex} with MOVE LIST: ${moveList}`);\n    if (gameIsOver) {\n      console.log(`handleColumnClick() had NO EFFECT since game is already over!`)\n      return \n    }\n    let cell = lowestUnclaimedCells[columnIndex]\n    if (cell === -1) {\n      console.log(`handleColumnClick() had NO EFFECT since column is full!`)\n      return\n    }\n    setActiveCell(cell)\n    openMathQuestionModal(cell)\n  }\n\n  function openMathQuestionModal() {\n    let difficulty = determineDifficulty()\n    let topic = chooseRandomFromArray(settings.topics)\n    generateQuestion(topic, difficulty).then(newQuestion => {\n      setQuestion(newQuestion)\n      setHeaderText(newQuestion.instructions)\n      setOpenModal(\"question\")\n    })\n  }\n\n  function handleAnswerSubmit(playersAnswer) {\n    const answerIsCorrect = (Number(playersAnswer.trim()) === question.correctAnswer)\n    const answerFeedback = answerIsCorrect ? \n      chooseRandomFromArray(waysToSayCorrect) : \n      `Nope. It was ${question.correctAnswer}.`\n    setHeaderText(answerFeedback)\n\n    let moveToAdd = (answerIsCorrect) ? activeCell : -1\n    let updatedMoveList = moveList.concat(moveToAdd)\n    let updatedGameStatus = getGameStatus(updatedMoveList)\n    console.log(`updated game status : ${updatedGameStatus}`);\n    // Close the question modal after the player has had time too see the feedback\n    setTimeout(() => { \n      setOpenModal(\"none\")\n    }, 1400);\n    setTimeout(() => {\n      setMoveList(updatedMoveList)\n    }, 1850)\n\n    // Handle Bot'sTurn\n    if (settings.opponent === \"bot\" && updatedGameStatus === 'playerTwosTurn') {\n      let botMove = getBotMove(updatedMoveList)\n      let moveListAfterBot = updatedMoveList.concat(botMove)\n      // let gameStatusAfterBot = updatedGameStatus(moveListAfterBot)\n      console.log(`Adding Bot Move: ${botMove} to the moveList.`);\n      setTimeout(() => {\n        setMoveList(moveListAfterBot)\n        // setGameStatus(gameStatusAfterBot)\n      }, 2200)\n    }\n      \n  }\n\n  function determineDifficulty() {\n    if (settings.difficultyMode === \"increasing\") {\n      const score = getScore()\n      if (score < 7) {\n        return \"easy\"\n      }\n      else if (score < 14) {\n        return \"medium\"\n      }\n      else if (score >= 14) {\n        return \"hard\"\n      }\n      else {\n        console.error(`Invalid number of question right so far: ${score}`);\n        return \"error\"\n      }\n    }\n    else {\n      return settings.difficultyMode\n    }\n  }\n  \n  function getScore(player = nextPlayer) {\n    const thisPlayersMoves = (player === \"playerOne\") ? playerOnesMoves : playerTwosMoves\n    return thisPlayersMoves.length\n  }\n\n  function startNewGame(settings) {\n    // console.log(`STARTING NEW GAME with SETTINGS: ${JSON.stringify(settings, null, 4)}`);\n    setSettings(settings)\n    setMoveList([])\n    setOpenModal(\"none\")\n  }\n\n  function cancelNewGame() {\n    setOpenModal(\"none\")\n  }\n\n  function undoMove() {\n    let updatedMoveList = (settings.opponent === 'bot') ? moveList.slice(0, -2) : moveList.slice(0, -1)\n    console.log(`MOVELIST AFTER UNDO: ${updatedMoveList}`);\n    setMoveList(updatedMoveList)\n  }\n\n  function openSettingsModal() {\n    setOpenModal(\"settings\")\n  }\n  \n  return (\n    <Box \n      id='connect_four_background'\n      width='100%' \n      height={availableHeight}\n      overflow='hidden'\n      bgcolor='connectFour.background'\n      color='connectFour.board'\n      display='flex'\n      flexDirection='column'\n      alignItems='center'\n      justifyContent='center'\n      // position='relative'\n    >\n      \n      <WelcomeModal\n        open={(openModal === \"welcome\")}\n        openSettingsModal={openSettingsModal}\n      />\n\n      <SettingsModal \n        open={(openModal === \"settings\")}\n        settings={settings}\n        startNewGame={startNewGame}\n        cancelNewGame={cancelNewGame}\n      />\n\n      <MathQuestionModal\n        open={(openModal === \"question\")}\n        question={question}\n        headerText={headerText}\n        handleAnswerSubmit={handleAnswerSubmit}\n      />\n\n      <MaxSquareArea >\n        <GameBoard handleColumnClick={handleColumnClick} />\n        <NewGameAndUndoButtons \n          openSettingsModal={openSettingsModal}\n          undoMove={undoMove}\n        />\n      </MaxSquareArea>\n    </Box>\n  )\n}","import React from 'react'\n\nimport { ConnectFourContextProvider } from \"./ConnectFourContext\";\nimport ConnectFourController from './ConnectFourController';\n\nexport default function ConnectFourRoot() {\n  return (\n    <ConnectFourContextProvider >\n      <ConnectFourController />\n    </ConnectFourContextProvider>\n  )\n}"],"sourceRoot":""}